openapi: 3.0.0
info:
  title: Evently API
  version: "1.0.0"
  description: A simple Express API
servers:
  - url: http://localhost:5000/api

paths:
  /registration:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: User's email as username.
                password:
                  type: string
                  description: User's password meeting specific validation requirements.
      responses:
        '201':
          description: User registered successfully.
        '400':
          description: Bad request (e.g., invalid email format).

  /login:
    post:
      summary: Login a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: User's email as username.
                password:
                  type: string
                  description: User's password.
      responses:
        '200':
          description: Login successful.
        '400':
          description: Incorrect email or password.

  /logout:
    post:
      summary: Logout a user
      responses:
        '200':
          description: Logout successful.

  /google:
    get:
      summary: Google authentication
      responses:
        '200':
          description: Redirects to Google for authentication.

  /google/callback:
    get:
      summary: Google authentication callback
      responses:
        '200':
          description: Callback for Google authentication.

  /auth:
    get:
      summary: Check if user is authenticated
      responses:
        '200':
          description: Returns user authentication status.

  /send-verification-email:
    post:
      summary: Send email verification to the user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: User's email for verification.
      responses:
        '200':
          description: Verification email was sent.
        '403':
          description: Email already verified.

  /verify-email:
    get:
      summary: Verify user email
      parameters:
        - in: query
          name: email
          schema:
            type: string
          description: User's email address to be verified.
        - in: query
          name: token
          schema:
            type: string
          description: JWT token for email verification.
      responses:
        '200':
          description: Email verified successfully.
        '400':
          description: Invalid or expired token.

  /google/mobile:
    post:
      summary: Verify Google token from mobile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                  description: Google ID token from the mobile app.
      responses:
        '200':
          description: Google token verified and user authenticated.
        '500':
          description: Internal error during token verification.